# AUGUST 2023: OVERWRITING WITH A NEW `nixos-generate-config` INVOCATION
# AFTER THE ORIGINAL ONE IN NOVEMBER 2021!
#
#
# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "xhci_pci" "thunderbolt" "nvme" "usbhid" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" "coretemp" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/3fb166d5-0148-4e6a-8f11-9fbf9ff9e159";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/2631-4AD8";
    fsType = "vfat";
  };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/97546dd8-414e-4ba6-9402-69c908eb02a9"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-2aee152f5b33.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-78c4fd9d6390.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-adf2239edaac.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-c957868760fa.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp170s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
